"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplesConfig = exports.DictionaryGeneratorCommandConfig = void 0;
const runtypes_1 = require("runtypes");
const Props = runtypes_1.Dictionary(runtypes_1.String, 'string');
const TargetBasePathConfig = runtypes_1.String.Or(runtypes_1.Partial({
    files: runtypes_1.String,
    inserts: runtypes_1.String,
}));
const BasePathConfig = runtypes_1.String.Or(runtypes_1.Record({
    target: TargetBasePathConfig,
}).And(runtypes_1.Partial({
    templates: runtypes_1.String,
})));
const InsertPosition = runtypes_1.Union(runtypes_1.Literal('above'), runtypes_1.Literal('below'), runtypes_1.Literal('left'), runtypes_1.Literal('right'));
const RegExpConfig = runtypes_1.Dictionary(runtypes_1.String, 'string');
const InsertsConfig = runtypes_1.Partial({
    regex: RegExpConfig,
    position: InsertPosition,
});
const PromptConfig = runtypes_1.String.Or(runtypes_1.Record({
    name: runtypes_1.String,
}).And(runtypes_1.Partial({
    doc: runtypes_1.String,
})));
const GeneratorFileConfig = runtypes_1.Record({
    target: runtypes_1.String,
}).And(runtypes_1.Partial({
    template: runtypes_1.String,
}));
const GeneratorInsertConfig = runtypes_1.Record({
    target: runtypes_1.String,
}).And(InsertsConfig);
const GeneratorCommandConfig = runtypes_1.Partial({
    base: BasePathConfig,
    doc: runtypes_1.String,
    props: runtypes_1.Array(PromptConfig),
    default: Props,
    files: runtypes_1.Array(GeneratorFileConfig),
    inserts: runtypes_1.Array(GeneratorInsertConfig),
}).And(InsertsConfig);
exports.DictionaryGeneratorCommandConfig = runtypes_1.Dictionary(GeneratorCommandConfig, 'string');
exports.TemplesConfig = runtypes_1.Record({
    generators: exports.DictionaryGeneratorCommandConfig,
}).And(runtypes_1.Partial({
    base: BasePathConfig,
    handlebars: runtypes_1.String,
    default: Props,
    verbose: runtypes_1.Boolean,
}).And(InsertsConfig));
